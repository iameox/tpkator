#!/bin/bash

function extract() {
    [[ "$(head -c 4)" == "KAPD" ]] || return 1

    export sections="$(head -c 2 | perl -0777 -ne 'print unpack "v"')"
    sizes=($(head -c $((4 * $sections)) | perl -0777 -ne 'print join " ", unpack "V$ENV{sections}"'))

    for i in $(seq 1 "$sections"); do
        length="$(head -c 2 | perl -0777 -ne 'print unpack "v"')"
        names+=("$(head -c "$length")")
    done

    for i in $(seq 1 "$sections"); do
        head -c "${sizes[i-1]}" > "sections/${names[i-1]}"
    done
}

[ -z "$1" ] && echo "Usage: $0 <infile>" && exit 1

mkdir -p sections frames
if ! zlib-flate -uncompress < "$1" | extract; then
    echo "File not recognized: '$1'" >&2

    rm -rf frames sections
    exit 1
fi

eval "$(jq -r '.frames|map(.|="convert jxr:sections/t -background none -crop "+(.rotated as $r|.frame|if $r then"\(.h)x\(.w)+\(.x)+\(.y) -rotate -90"
    else"\(.w)x\(.h)+\(.x)+\(.y)"end)+" -extent "+(.sourceSize|"\(.w)x\(.h)")+(.spriteSourceSize|map_values(.|=-.|tostring|scan("-.+")//"+"+.)|.x+.y)
    +" frames/\(.filename)")|join("&&")' sections/j)"
